// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pipeline.proto
// Protobuf C++ Version: 5.29.5

#include "pipeline.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tpipeline {
namespace proto {

inline constexpr Tensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shape_{},
        _shape_cached_byte_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dtype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Tensor::Tensor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorDefaultTypeInternal() {}
  union {
    Tensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorDefaultTypeInternal _Tensor_default_instance_;

inline constexpr StageConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stage_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_config_json_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_stage_endpoint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prev_stage_endpoint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        coordinator_endpoint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stage_index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StageConfig::StageConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StageConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StageConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StageConfigDefaultTypeInternal() {}
  union {
    StageConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StageConfigDefaultTypeInternal _StageConfig_default_instance_;

inline constexpr Task::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr},
        type_{static_cast< ::tpipeline::proto::TaskType >(0)},
        micro_batch_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Task::Task(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskDefaultTypeInternal() {}
  union {
    Task _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskDefaultTypeInternal _Task_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sender_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        command_type_{static_cast< ::tpipeline::proto::CommandType >(0)},
        sequence_number_{0u},
        timestamp_{::uint64_t{0u}},
        payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace proto
}  // namespace tpipeline
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_pipeline_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_pipeline_2eproto = nullptr;
const ::uint32_t
    TableStruct_pipeline_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Tensor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Tensor, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Tensor, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Tensor, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Task, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Task, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Task, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Task, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Task, _impl_.micro_batch_id_),
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_.command_type_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_.sequence_number_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_.sender_id_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_.recipient_id_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_.timestamp_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::StageConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::StageConfig, _impl_.stage_id_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::StageConfig, _impl_.stage_index_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::StageConfig, _impl_.model_config_json_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::StageConfig, _impl_.next_stage_endpoint_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::StageConfig, _impl_.prev_stage_endpoint_),
        PROTOBUF_FIELD_OFFSET(::tpipeline::proto::StageConfig, _impl_.coordinator_endpoint_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tpipeline::proto::Tensor)},
        {11, 22, -1, sizeof(::tpipeline::proto::Task)},
        {25, -1, -1, sizeof(::tpipeline::proto::Message)},
        {42, -1, -1, sizeof(::tpipeline::proto::StageConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tpipeline::proto::_Tensor_default_instance_._instance,
    &::tpipeline::proto::_Task_default_instance_._instance,
    &::tpipeline::proto::_Message_default_instance_._instance,
    &::tpipeline::proto::_StageConfig_default_instance_._instance,
};
const char descriptor_table_protodef_pipeline_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016pipeline.proto\022\017tpipeline.proto\"4\n\006Ten"
    "sor\022\r\n\005shape\030\001 \003(\r\022\014\n\004data\030\002 \001(\014\022\r\n\005dtyp"
    "e\030\003 \001(\t\"n\n\004Task\022\'\n\004type\030\001 \001(\0162\031.tpipelin"
    "e.proto.TaskType\022%\n\004data\030\002 \001(\0132\027.tpipeli"
    "ne.proto.Tensor\022\026\n\016micro_batch_id\030\003 \001(\r\""
    "\346\001\n\007Message\0222\n\014command_type\030\001 \001(\0162\034.tpip"
    "eline.proto.CommandType\022\027\n\017sequence_numb"
    "er\030\002 \001(\r\022\021\n\tsender_id\030\003 \001(\t\022\024\n\014recipient"
    "_id\030\004 \001(\t\022\021\n\ttimestamp\030\005 \001(\004\022%\n\004task\030\n \001"
    "(\0132\025.tpipeline.proto.TaskH\000\022\016\n\004text\030\013 \001("
    "\tH\000\022\020\n\006signal\030\014 \001(\010H\000B\t\n\007payload\"\247\001\n\013Sta"
    "geConfig\022\020\n\010stage_id\030\001 \001(\t\022\023\n\013stage_inde"
    "x\030\002 \001(\005\022\031\n\021model_config_json\030\003 \001(\t\022\033\n\023ne"
    "xt_stage_endpoint\030\004 \001(\t\022\033\n\023prev_stage_en"
    "dpoint\030\005 \001(\t\022\034\n\024coordinator_endpoint\030\006 \001"
    "(\t*%\n\010TaskType\022\013\n\007FORWARD\020\000\022\014\n\010BACKWARD\020"
    "\001*\204\003\n\013CommandType\022\020\n\014FORWARD_TASK\020\000\022\021\n\rB"
    "ACKWARD_TASK\020\001\022\025\n\021UPDATE_PARAMETERS\020\002\022\016\n"
    "\nTRAIN_MODE\020\003\022\r\n\tEVAL_MODE\020\004\022\014\n\010SHUTDOWN"
    "\020\005\022\025\n\021HANDSHAKE_REQUEST\020\006\022\026\n\022HANDSHAKE_R"
    "ESPONSE\020\007\022\023\n\017CONFIG_TRANSFER\020\010\022\023\n\017CONFIG"
    "_RECEIVED\020\t\022\024\n\020WEIGHTS_TRANSFER\020\n\022\024\n\020WEI"
    "GHTS_RECEIVED\020\013\022\022\n\016STATUS_REQUEST\020\014\022\023\n\017S"
    "TATUS_RESPONSE\020\r\022\026\n\022PARAMETERS_UPDATED\020\016"
    "\022\020\n\014HEALTH_CHECK\020\017\022\020\n\014ERROR_REPORT\020\020\022\020\n\014"
    "TASK_FAILURE\020\021\022\020\n\014BARRIER_SYNC\020\022b\006proto3"
};
static ::absl::once_flag descriptor_table_pipeline_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_pipeline_2eproto = {
    false,
    false,
    1040,
    descriptor_table_protodef_pipeline_2eproto,
    "pipeline.proto",
    &descriptor_table_pipeline_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_pipeline_2eproto::offsets,
    file_level_enum_descriptors_pipeline_2eproto,
    file_level_service_descriptors_pipeline_2eproto,
};
namespace tpipeline {
namespace proto {
const ::google::protobuf::EnumDescriptor* TaskType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pipeline_2eproto);
  return file_level_enum_descriptors_pipeline_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TaskType_internal_data_[] = {
    131072u, 0u, };
bool TaskType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* CommandType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pipeline_2eproto);
  return file_level_enum_descriptors_pipeline_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t CommandType_internal_data_[] = {
    1245184u, 0u, };
bool CommandType_IsValid(int value) {
  return 0 <= value && value <= 18;
}
// ===================================================================

class Tensor::_Internal {
 public:
};

Tensor::Tensor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tpipeline.proto.Tensor)
}
inline PROTOBUF_NDEBUG_INLINE Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tpipeline::proto::Tensor& from_msg)
      : shape_{visibility, arena, from.shape_},
        _shape_cached_byte_size_{0},
        data_(arena, from.data_),
        dtype_(arena, from.dtype_),
        _cached_size_{0} {}

Tensor::Tensor(
    ::google::protobuf::Arena* arena,
    const Tensor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Tensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tpipeline.proto.Tensor)
}
inline PROTOBUF_NDEBUG_INLINE Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shape_{visibility, arena},
        _shape_cached_byte_size_{0},
        data_(arena),
        dtype_(arena),
        _cached_size_{0} {}

inline void Tensor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Tensor::~Tensor() {
  // @@protoc_insertion_point(destructor:tpipeline.proto.Tensor)
  SharedDtor(*this);
}
inline void Tensor::SharedDtor(MessageLite& self) {
  Tensor& this_ = static_cast<Tensor&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.dtype_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Tensor::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Tensor(arena);
}
constexpr auto Tensor::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_) +
          decltype(Tensor::_impl_.shape_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Tensor), alignof(Tensor), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Tensor::PlacementNew_,
                                 sizeof(Tensor),
                                 alignof(Tensor));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Tensor::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Tensor_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Tensor::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Tensor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Tensor::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Tensor>(), &Tensor::ByteSizeLong,
            &Tensor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Tensor, _impl_._cached_size_),
        false,
    },
    &Tensor::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Tensor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 36, 2> Tensor::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tpipeline::proto::Tensor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated uint32 shape = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_)}},
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.data_)}},
    // string dtype = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 shape = 1;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string dtype = 3;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\0\5\0\0\0\0"
    "tpipeline.proto.Tensor"
    "dtype"
  }},
};

PROTOBUF_NOINLINE void Tensor::Clear() {
// @@protoc_insertion_point(message_clear_start:tpipeline.proto.Tensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.data_.ClearToEmpty();
  _impl_.dtype_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Tensor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Tensor& this_ = static_cast<const Tensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Tensor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Tensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tpipeline.proto.Tensor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated uint32 shape = 1;
          {
            int byte_size = this_._impl_._shape_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  1, this_._internal_shape(), byte_size, target);
            }
          }

          // bytes data = 2;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // string dtype = 3;
          if (!this_._internal_dtype().empty()) {
            const std::string& _s = this_._internal_dtype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.Tensor.dtype");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tpipeline.proto.Tensor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Tensor::ByteSizeLong(const MessageLite& base) {
          const Tensor& this_ = static_cast<const Tensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Tensor::ByteSizeLong() const {
          const Tensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tpipeline.proto.Tensor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 shape = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_shape(), 1,
                      this_._impl_._shape_cached_byte_size_);
            }
          }
           {
            // bytes data = 2;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string dtype = 3;
            if (!this_._internal_dtype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Tensor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Tensor*>(&to_msg);
  auto& from = static_cast<const Tensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tpipeline.proto.Tensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape()->MergeFrom(from._internal_shape());
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_dtype().empty()) {
    _this->_internal_set_dtype(from._internal_dtype());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Tensor::CopyFrom(const Tensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpipeline.proto.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Tensor::InternalSwap(Tensor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dtype_, &other->_impl_.dtype_, arena);
}

::google::protobuf::Metadata Tensor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Task::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Task>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Task, _impl_._has_bits_);
};

Task::Task(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tpipeline.proto.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tpipeline::proto::Task& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Task::Task(
    ::google::protobuf::Arena* arena,
    const Task& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Task* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tpipeline::proto::Tensor>(
                              arena, *from._impl_.data_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, micro_batch_id_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::micro_batch_id_));

  // @@protoc_insertion_point(copy_constructor:tpipeline.proto.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Task::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_),
           0,
           offsetof(Impl_, micro_batch_id_) -
               offsetof(Impl_, data_) +
               sizeof(Impl_::micro_batch_id_));
}
Task::~Task() {
  // @@protoc_insertion_point(destructor:tpipeline.proto.Task)
  SharedDtor(*this);
}
inline void Task::SharedDtor(MessageLite& self) {
  Task& this_ = static_cast<Task&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.data_;
  this_._impl_.~Impl_();
}

inline void* Task::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Task(arena);
}
constexpr auto Task::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Task),
                                            alignof(Task));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Task::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Task_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Task::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Task>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Task::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Task>(), &Task::ByteSizeLong,
            &Task::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Task, _impl_._cached_size_),
        false,
    },
    &Task::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Task::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Task::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Task, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tpipeline::proto::Task>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tpipeline.proto.TaskType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.type_)}},
    // .tpipeline.proto.Tensor data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.data_)}},
    // uint32 micro_batch_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.micro_batch_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.micro_batch_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tpipeline.proto.TaskType type = 1;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tpipeline.proto.Tensor data = 2;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 micro_batch_id = 3;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.micro_batch_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tpipeline::proto::Tensor>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:tpipeline.proto.Task)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.micro_batch_id_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.micro_batch_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Task::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Task::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tpipeline.proto.Task)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tpipeline.proto.TaskType type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tpipeline.proto.Tensor data = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
                stream);
          }

          // uint32 micro_batch_id = 3;
          if (this_._internal_micro_batch_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_micro_batch_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tpipeline.proto.Task)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Task::ByteSizeLong(const MessageLite& base) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Task::ByteSizeLong() const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tpipeline.proto.Task)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tpipeline.proto.Tensor data = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
            }
          }
           {
            // .tpipeline.proto.TaskType type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // uint32 micro_batch_id = 3;
            if (this_._internal_micro_batch_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_micro_batch_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Task::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Task*>(&to_msg);
  auto& from = static_cast<const Task&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tpipeline.proto.Task)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.data_ != nullptr);
    if (_this->_impl_.data_ == nullptr) {
      _this->_impl_.data_ =
          ::google::protobuf::Message::CopyConstruct<::tpipeline::proto::Tensor>(arena, *from._impl_.data_);
    } else {
      _this->_impl_.data_->MergeFrom(*from._impl_.data_);
    }
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_micro_batch_id() != 0) {
    _this->_impl_.micro_batch_id_ = from._impl_.micro_batch_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpipeline.proto.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Task::InternalSwap(Task* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Task, _impl_.micro_batch_id_)
      + sizeof(Task::_impl_.micro_batch_id_)
      - PROTOBUF_FIELD_OFFSET(Task, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::google::protobuf::Metadata Task::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tpipeline::proto::Message, _impl_._oneof_case_);
};

void Message::set_allocated_task(::tpipeline::proto::Task* task) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (task) {
    ::google::protobuf::Arena* submessage_arena = task->GetArena();
    if (message_arena != submessage_arena) {
      task = ::google::protobuf::internal::GetOwnedMessage(message_arena, task, submessage_arena);
    }
    set_has_task();
    _impl_.payload_.task_ = task;
  }
  // @@protoc_insertion_point(field_set_allocated:tpipeline.proto.Message.task)
}
Message::Message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tpipeline.proto.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tpipeline::proto::Message& from_msg)
      : sender_id_(arena, from.sender_id_),
        recipient_id_(arena, from.recipient_id_),
        payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, command_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, command_type_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, command_type_) +
               sizeof(Impl_::timestamp_));
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kTask:
        _impl_.payload_.task_ = ::google::protobuf::Message::CopyConstruct<::tpipeline::proto::Task>(arena, *from._impl_.payload_.task_);
        break;
      case kText:
        new (&_impl_.payload_.text_) decltype(_impl_.payload_.text_){arena, from._impl_.payload_.text_};
        break;
      case kSignal:
        _impl_.payload_.signal_ = from._impl_.payload_.signal_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tpipeline.proto.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sender_id_(arena),
        recipient_id_(arena),
        payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, command_type_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, command_type_) +
               sizeof(Impl_::timestamp_));
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:tpipeline.proto.Message)
  SharedDtor(*this);
}
inline void Message::SharedDtor(MessageLite& self) {
  Message& this_ = static_cast<Message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sender_id_.Destroy();
  this_._impl_.recipient_id_.Destroy();
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void Message::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tpipeline.proto.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kTask: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.task_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.task_);
      }
      break;
    }
    case kText: {
      _impl_.payload_.text_.Destroy();
      break;
    }
    case kSignal: {
      // No need to clear
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* Message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Message(arena);
}
constexpr auto Message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Message),
                                            alignof(Message));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Message>(), &Message::ByteSizeLong,
            &Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
        false,
    },
    &Message::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 65, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963680,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tpipeline::proto::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tpipeline.proto.CommandType command_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.command_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.command_type_)}},
    // uint32 sequence_number = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.sequence_number_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.sequence_number_)}},
    // string sender_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.sender_id_)}},
    // string recipient_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.recipient_id_)}},
    // uint64 timestamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message, _impl_.timestamp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tpipeline.proto.CommandType command_type = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.command_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 sequence_number = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.sequence_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string sender_id = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.sender_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient_id = 4;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.recipient_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .tpipeline.proto.Task task = 10;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_.task_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string text = 11;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_.text_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool signal = 12;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_.signal_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tpipeline::proto::Task>()},
  }}, {{
    "\27\0\0\11\14\0\0\4\0\0\0\0\0\0\0\0"
    "tpipeline.proto.Message"
    "sender_id"
    "recipient_id"
    "text"
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tpipeline.proto.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_id_.ClearToEmpty();
  _impl_.recipient_id_.ClearToEmpty();
  ::memset(&_impl_.command_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.command_type_)) + sizeof(_impl_.timestamp_));
  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tpipeline.proto.Message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tpipeline.proto.CommandType command_type = 1;
          if (this_._internal_command_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_command_type(), target);
          }

          // uint32 sequence_number = 2;
          if (this_._internal_sequence_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_sequence_number(), target);
          }

          // string sender_id = 3;
          if (!this_._internal_sender_id().empty()) {
            const std::string& _s = this_._internal_sender_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.Message.sender_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string recipient_id = 4;
          if (!this_._internal_recipient_id().empty()) {
            const std::string& _s = this_._internal_recipient_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.Message.recipient_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 timestamp = 5;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_timestamp(), target);
          }

          switch (this_.payload_case()) {
            case kTask: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.payload_.task_, this_._impl_.payload_.task_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kText: {
              const std::string& _s = this_._internal_text();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.Message.text");
              target = stream->WriteStringMaybeAliased(11, _s, target);
              break;
            }
            case kSignal: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  12, this_._internal_signal(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tpipeline.proto.Message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Message::ByteSizeLong(const MessageLite& base) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Message::ByteSizeLong() const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tpipeline.proto.Message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string sender_id = 3;
            if (!this_._internal_sender_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender_id());
            }
            // string recipient_id = 4;
            if (!this_._internal_recipient_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient_id());
            }
            // .tpipeline.proto.CommandType command_type = 1;
            if (this_._internal_command_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_command_type());
            }
            // uint32 sequence_number = 2;
            if (this_._internal_sequence_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_sequence_number());
            }
            // uint64 timestamp = 5;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          switch (this_.payload_case()) {
            // .tpipeline.proto.Task task = 10;
            case kTask: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.task_);
              break;
            }
            // string text = 11;
            case kText: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
              break;
            }
            // bool signal = 12;
            case kSignal: {
              total_size += 2;
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tpipeline.proto.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_id().empty()) {
    _this->_internal_set_sender_id(from._internal_sender_id());
  }
  if (!from._internal_recipient_id().empty()) {
    _this->_internal_set_recipient_id(from._internal_recipient_id());
  }
  if (from._internal_command_type() != 0) {
    _this->_impl_.command_type_ = from._impl_.command_type_;
  }
  if (from._internal_sequence_number() != 0) {
    _this->_impl_.sequence_number_ = from._impl_.sequence_number_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTask: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.task_ =
              ::google::protobuf::Message::CopyConstruct<::tpipeline::proto::Task>(arena, *from._impl_.payload_.task_);
        } else {
          _this->_impl_.payload_.task_->MergeFrom(from._internal_task());
        }
        break;
      }
      case kText: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.text_.InitDefault();
        }
        _this->_impl_.payload_.text_.Set(from._internal_text(), arena);
        break;
      }
      case kSignal: {
        _this->_impl_.payload_.signal_ = from._impl_.payload_.signal_;
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpipeline.proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_id_, &other->_impl_.sender_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_id_, &other->_impl_.recipient_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_)
      + sizeof(Message::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.command_type_)>(
          reinterpret_cast<char*>(&_impl_.command_type_),
          reinterpret_cast<char*>(&other->_impl_.command_type_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StageConfig::_Internal {
 public:
};

StageConfig::StageConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tpipeline.proto.StageConfig)
}
inline PROTOBUF_NDEBUG_INLINE StageConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tpipeline::proto::StageConfig& from_msg)
      : stage_id_(arena, from.stage_id_),
        model_config_json_(arena, from.model_config_json_),
        next_stage_endpoint_(arena, from.next_stage_endpoint_),
        prev_stage_endpoint_(arena, from.prev_stage_endpoint_),
        coordinator_endpoint_(arena, from.coordinator_endpoint_),
        _cached_size_{0} {}

StageConfig::StageConfig(
    ::google::protobuf::Arena* arena,
    const StageConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StageConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.stage_index_ = from._impl_.stage_index_;

  // @@protoc_insertion_point(copy_constructor:tpipeline.proto.StageConfig)
}
inline PROTOBUF_NDEBUG_INLINE StageConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stage_id_(arena),
        model_config_json_(arena),
        next_stage_endpoint_(arena),
        prev_stage_endpoint_(arena),
        coordinator_endpoint_(arena),
        _cached_size_{0} {}

inline void StageConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stage_index_ = {};
}
StageConfig::~StageConfig() {
  // @@protoc_insertion_point(destructor:tpipeline.proto.StageConfig)
  SharedDtor(*this);
}
inline void StageConfig::SharedDtor(MessageLite& self) {
  StageConfig& this_ = static_cast<StageConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.stage_id_.Destroy();
  this_._impl_.model_config_json_.Destroy();
  this_._impl_.next_stage_endpoint_.Destroy();
  this_._impl_.prev_stage_endpoint_.Destroy();
  this_._impl_.coordinator_endpoint_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StageConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StageConfig(arena);
}
constexpr auto StageConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StageConfig),
                                            alignof(StageConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StageConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StageConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StageConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StageConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StageConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StageConfig>(), &StageConfig::ByteSizeLong,
            &StageConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StageConfig, _impl_._cached_size_),
        false,
    },
    &StageConfig::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StageConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 119, 2> StageConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tpipeline::proto::StageConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string stage_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.stage_id_)}},
    // int32 stage_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StageConfig, _impl_.stage_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.stage_index_)}},
    // string model_config_json = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.model_config_json_)}},
    // string next_stage_endpoint = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.next_stage_endpoint_)}},
    // string prev_stage_endpoint = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.prev_stage_endpoint_)}},
    // string coordinator_endpoint = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.coordinator_endpoint_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string stage_id = 1;
    {PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.stage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 stage_index = 2;
    {PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.stage_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string model_config_json = 3;
    {PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.model_config_json_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string next_stage_endpoint = 4;
    {PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.next_stage_endpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string prev_stage_endpoint = 5;
    {PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.prev_stage_endpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string coordinator_endpoint = 6;
    {PROTOBUF_FIELD_OFFSET(StageConfig, _impl_.coordinator_endpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\10\0\21\23\23\24\0"
    "tpipeline.proto.StageConfig"
    "stage_id"
    "model_config_json"
    "next_stage_endpoint"
    "prev_stage_endpoint"
    "coordinator_endpoint"
  }},
};

PROTOBUF_NOINLINE void StageConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tpipeline.proto.StageConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stage_id_.ClearToEmpty();
  _impl_.model_config_json_.ClearToEmpty();
  _impl_.next_stage_endpoint_.ClearToEmpty();
  _impl_.prev_stage_endpoint_.ClearToEmpty();
  _impl_.coordinator_endpoint_.ClearToEmpty();
  _impl_.stage_index_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StageConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StageConfig& this_ = static_cast<const StageConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StageConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StageConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tpipeline.proto.StageConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string stage_id = 1;
          if (!this_._internal_stage_id().empty()) {
            const std::string& _s = this_._internal_stage_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.StageConfig.stage_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 stage_index = 2;
          if (this_._internal_stage_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_stage_index(), target);
          }

          // string model_config_json = 3;
          if (!this_._internal_model_config_json().empty()) {
            const std::string& _s = this_._internal_model_config_json();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.StageConfig.model_config_json");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string next_stage_endpoint = 4;
          if (!this_._internal_next_stage_endpoint().empty()) {
            const std::string& _s = this_._internal_next_stage_endpoint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.StageConfig.next_stage_endpoint");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string prev_stage_endpoint = 5;
          if (!this_._internal_prev_stage_endpoint().empty()) {
            const std::string& _s = this_._internal_prev_stage_endpoint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.StageConfig.prev_stage_endpoint");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string coordinator_endpoint = 6;
          if (!this_._internal_coordinator_endpoint().empty()) {
            const std::string& _s = this_._internal_coordinator_endpoint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tpipeline.proto.StageConfig.coordinator_endpoint");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tpipeline.proto.StageConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StageConfig::ByteSizeLong(const MessageLite& base) {
          const StageConfig& this_ = static_cast<const StageConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StageConfig::ByteSizeLong() const {
          const StageConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tpipeline.proto.StageConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string stage_id = 1;
            if (!this_._internal_stage_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stage_id());
            }
            // string model_config_json = 3;
            if (!this_._internal_model_config_json().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_model_config_json());
            }
            // string next_stage_endpoint = 4;
            if (!this_._internal_next_stage_endpoint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_next_stage_endpoint());
            }
            // string prev_stage_endpoint = 5;
            if (!this_._internal_prev_stage_endpoint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_prev_stage_endpoint());
            }
            // string coordinator_endpoint = 6;
            if (!this_._internal_coordinator_endpoint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_coordinator_endpoint());
            }
            // int32 stage_index = 2;
            if (this_._internal_stage_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_stage_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StageConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StageConfig*>(&to_msg);
  auto& from = static_cast<const StageConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tpipeline.proto.StageConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stage_id().empty()) {
    _this->_internal_set_stage_id(from._internal_stage_id());
  }
  if (!from._internal_model_config_json().empty()) {
    _this->_internal_set_model_config_json(from._internal_model_config_json());
  }
  if (!from._internal_next_stage_endpoint().empty()) {
    _this->_internal_set_next_stage_endpoint(from._internal_next_stage_endpoint());
  }
  if (!from._internal_prev_stage_endpoint().empty()) {
    _this->_internal_set_prev_stage_endpoint(from._internal_prev_stage_endpoint());
  }
  if (!from._internal_coordinator_endpoint().empty()) {
    _this->_internal_set_coordinator_endpoint(from._internal_coordinator_endpoint());
  }
  if (from._internal_stage_index() != 0) {
    _this->_impl_.stage_index_ = from._impl_.stage_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StageConfig::CopyFrom(const StageConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpipeline.proto.StageConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StageConfig::InternalSwap(StageConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stage_id_, &other->_impl_.stage_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_config_json_, &other->_impl_.model_config_json_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_stage_endpoint_, &other->_impl_.next_stage_endpoint_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_stage_endpoint_, &other->_impl_.prev_stage_endpoint_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.coordinator_endpoint_, &other->_impl_.coordinator_endpoint_, arena);
        swap(_impl_.stage_index_, other->_impl_.stage_index_);
}

::google::protobuf::Metadata StageConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace tpipeline
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_pipeline_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
